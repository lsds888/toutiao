/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA==NULL||headB==NULL) return NULL;
        ListNode* dummya=headA;
        ListNode* dummyb=headB;
        int lena=0;
        int lenb=0;
        while(dummya->next){
            lena++;
            dummya=dummya->next;
        }
        while(dummyb->next){
            lenb++;
            dummyb=dummyb->next;
        }
        if(dummya!=dummyb){
            return NULL;
        }
        if(lena>lenb){
            int n=lena-lenb;
            for(int i=0;i<n;i++){
                headA=headA->next;
            }
        }else{
            int n=lenb-lena;
            for(int i=0;i<n;i++){
                headB=headB->next;
            }
        }
        while(headA&&headB&&headA!=headB){
            headA=headA->next;
            headB=headB->next;
        }
        return headA;
    }
};
